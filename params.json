{"name":"WearBucks API","tagline":"API for \"WearBucks (Pay for Starbucks)\" Android application","body":"WearBucks API is an open-source RESTful HTTP API for retrieving Starbucks user information. This is the API used by **WearBucks (Pay for Starbucks)** Android application on Google Play. \r\n\r\nThis API is based off [Starbucks class](https://github.com/Neal/php-starbucks) by [Neil](https://github.com/Neal). \r\n\r\n_Login information (username and password) is not stored and the API should only be used over SSL/TSL_\r\n\r\n#### Dependencies:\r\n- Slim PHP Micro-framework\r\n- Google Analytics **(optional for usage statistics)**\r\n- MongoDB **(optional for geolocation)** \r\n- Request body and response body use JSON\r\n\r\n#### API Endpoints:\r\n- **<code>POST</code> /account**\r\n- **<code>POST</code> /locations (In progress)**\r\n\r\n#### Installation instructions:\r\n- Just deploy and modify the optional environment variables in \"index.php\" as necessary.\r\n- Although the API is small, it was put together very quickly. It would be beneficial to look over the \"Response codes & Error Handling\" section as the API will always return HTTP 200 even when there are errors. Again, the \"/locations\" endpoint is currently in development and is not active.\r\n\r\n## <code>POST</code> /account\r\n> Retrieves Starbucks.com account details (given correct credentials) \r\n\r\n##### Parameters\r\n| Name  | Description | Details |\r\n| ------------- | ------------- | ------------- |\r\n| username  | Starbucks username or password  | required |\r\n| password  | Starbucks password  | required | \r\n##### Headers\r\n| Name  | Description | Details |\r\n| ------------- | ------------- | ------------- |\r\n| Content-Type  | application/json  | required |\r\n| cid  | Client UUID  | optional, used by Google Analytics |\r\n| av  | App Version Number  | optional, used by Google Analytics |\r\n\r\nExample JSON Request body:\r\n```json\r\n{\r\n  \"username\": \"user@domain.com\",\r\n  \"password\": \"******\"\r\n}\r\n```\r\nExample JSON Response body:\r\n```json\r\n{\r\n    \"error\": false,\r\n    \"customer_name\": \"Firstname Lastname\",\r\n    \"stars\": \"0\",\r\n    \"rewards\": \"0\",\r\n    \"dollar_balance\": \"00.00\",\r\n}\r\n```\r\n##### Response codes & Error Handling\r\n> The API will always return an HTTP status code 200 however there may be errors. In the JSON response body, \"error\" will not be false. Example:\r\n\r\n```json\r\n{\r\n  \"error\":{\r\n    \"code\": 401,\r\n    \"message\": \"Unauthorized\",\r\n    \"description\": \"Authentication credentials were malformed or incorrect.\"\r\n  }\r\n}\r\n```\r\n\r\nError codes:\r\n- <code>400</code> Bad Request - Likely that the request was not formatted correctly\r\n- <code>401</code> Unauthorized - Likely that the credentials were incorrect\r\n\r\n\r\n\r\n## <code>POST</code> /locations\r\n>**NOTE: This API endpoint is in progress and therefore the documentation is not complete. Analytics is also currently not supported** This feature  returns a list of nearby Starbucks locations stored in a MongoDB database (not included in API). Set the following environment variables in index.php: \r\n\r\n```php\r\n$_ENV['LOCATIONS'] = true;\r\n$_ENV['MONGOHQ_URL'] = mongodb://user:pass@server.mongohq.com/db_name;\r\n```\r\n\r\n\r\n## Google Analytics \r\n>Google analytics can be enabled and is tracked using \"Measurement Protocol\". Ensure \"Universal Analytics\" is enabled on the property and use the provided tracking ID \"UA-XXXX-XX\".Set the following environment variables in index.php: \r\n\r\n```php\r\n$_ENV['ANALYTICS'] = true;\r\n$_ENV['TRACKING_ID'] = \"UA-XXXXXXXX-X\";\r\n```","google":"UA-53295321-3","note":"Don't delete this file! It's used internally to help with page regeneration."}